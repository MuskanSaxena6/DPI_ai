{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muska\\\\main\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async () => {\n    if (input.trim() === '') return;\n    const newMessages = [...messages, {\n      text: input,\n      sender: 'user'\n    }];\n    setMessages(newMessages);\n    setInput('');\n    try {\n      const response = await axios.post('/api/chatbot', {\n        message: input\n      });\n      setMessages([...newMessages, {\n        text: response.data.reply,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error sending message to chatbot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px',\n      maxHeight: '400px',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender === 'user' ? 'You: ' : 'Bot: '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: t('chatbotPlaceholder'),\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: sendMessage,\n      children: t('sendMessage')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"7fcK686lQpHwd50zpshfjU4fhmc=\", false, function () {\n  return [useTranslation];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useTranslation","axios","TextField","Button","Paper","Typography","jsxDEV","_jsxDEV","Chatbot","_s","t","input","setInput","messages","setMessages","sendMessage","trim","newMessages","text","sender","response","post","message","data","reply","error","console","style","padding","maxHeight","overflowY","children","className","map","msg","index","variant","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","value","onChange","e","target","placeholder","margin","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/muska/main/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\r\n\r\nfunction Chatbot() {\r\n  const { t } = useTranslation();\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '') return;\r\n\r\n    const newMessages = [...messages, { text: input, sender: 'user' }];\r\n    setMessages(newMessages);\r\n    setInput('');\r\n\r\n    try {\r\n      const response = await axios.post('/api/chatbot', { message: input });\r\n      setMessages([...newMessages, { text: response.data.reply, sender: 'bot' }]);\r\n    } catch (error) {\r\n      console.error('Error sending message to chatbot:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ padding: '20px', maxHeight: '400px', overflowY: 'auto' }}>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, index) => (\r\n          <Typography key={index} variant=\"body1\" style={{ marginBottom: '10px' }}>\r\n            <strong>{msg.sender === 'user' ? 'You: ' : 'Bot: '}</strong>\r\n            {msg.text}\r\n          </Typography>\r\n        ))}\r\n      </div>\r\n      <TextField\r\n        fullWidth\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder={t('chatbotPlaceholder')}\r\n        margin=\"normal\"\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n        {t('sendMessage')}\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}