{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muska\\\\main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\n   import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n   import HomePage from './pages/HomePage';\n   import LoginPage from './pages/LoginPage';\n   import './i18n';\n\n   function App() {\n     return (\n       <Router>\n         <Routes>\n           <Route exact path=\"/\" element={<HomePage />} />\n           <Route path=\"/login\" element={<LoginPage />} />\n         </Routes>\n       </Router>\n     );\n   }\n\n   export default App;\n*/\n\n/*\n   import React from 'react';\n   import { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\n   import HomePage from './pages/HomePage';\n   import LoginPage from './pages/LoginPage';\n   import Navigation from './components/Navigation';\n   import './i18n';\n   \n   // Layout component to conditionally render Navigation\n   const Layout = ({ children }) => {\n     const location = useLocation();\n     const isLoginPage = location.pathname === '/login';\n   \n     return (\n       <>\n         {!isLoginPage && <Navigation />}\n         {children}\n       </>\n     );\n   };\n   \n   function App() {\n     return (\n       <Router>\n         <Layout>\n           <Routes>\n             <Route exact path=\"/\" element={<HomePage />} />\n             <Route path=\"/login\" element={<LoginPage />} />\n           </Routes>\n         </Layout>\n       </Router>\n     );\n   }\n   \n   export default App;\n   */\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport Navigation from './components/Navigation';\nimport ServicesPage from './pages/ServicesPage';\nimport './i18n';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createTheme } from '@material-ui/core/styles';\n\n// Create theme (customize as needed)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\n// Layout component to conditionally render Navigation\nconst Layout = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const isLoginPage = location.pathname === '/login';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoginPage && /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }, this), children]\n  }, void 0, true);\n};\n_s(Layout, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Layout;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/services\",\n            component: ServicesPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 8\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useLocation","HomePage","LoginPage","Navigation","ServicesPage","ThemeProvider","createTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","Layout","children","_s","location","isLoginPage","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","exact","path","element","component","_c2","$RefreshReg$"],"sources":["C:/Users/muska/main/frontend/src/App.js"],"sourcesContent":["/*import React from 'react';\n   import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n   import HomePage from './pages/HomePage';\n   import LoginPage from './pages/LoginPage';\n   import './i18n';\n\n   function App() {\n     return (\n       <Router>\n         <Routes>\n           <Route exact path=\"/\" element={<HomePage />} />\n           <Route path=\"/login\" element={<LoginPage />} />\n         </Routes>\n       </Router>\n     );\n   }\n\n   export default App;\n*/\n\n/*\n   import React from 'react';\n   import { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\n   import HomePage from './pages/HomePage';\n   import LoginPage from './pages/LoginPage';\n   import Navigation from './components/Navigation';\n   import './i18n';\n   \n   // Layout component to conditionally render Navigation\n   const Layout = ({ children }) => {\n     const location = useLocation();\n     const isLoginPage = location.pathname === '/login';\n   \n     return (\n       <>\n         {!isLoginPage && <Navigation />}\n         {children}\n       </>\n     );\n   };\n   \n   function App() {\n     return (\n       <Router>\n         <Layout>\n           <Routes>\n             <Route exact path=\"/\" element={<HomePage />} />\n             <Route path=\"/login\" element={<LoginPage />} />\n           </Routes>\n         </Layout>\n       </Router>\n     );\n   }\n   \n   export default App;\n   */\n\n\n   import React from 'react';\n   import { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\n   import HomePage from './pages/HomePage';\n   import LoginPage from './pages/LoginPage';\n   import Navigation from './components/Navigation';\n   import ServicesPage from './pages/ServicesPage';\n   import './i18n';\n   import { ThemeProvider } from '@material-ui/core/styles';\n   import { createTheme } from '@material-ui/core/styles';\n   \n   // Create theme (customize as needed)\n   const theme = createTheme();\n   \n   // Layout component to conditionally render Navigation\n   const Layout = ({ children }) => {\n     const location = useLocation();\n     const isLoginPage = location.pathname === '/login';\n   \n     return (\n       <>\n         {!isLoginPage && <Navigation />}\n         {children}\n       </>\n     );\n   };\n   \n   function App() {\n     return (\n       <ThemeProvider theme={theme}>\n         <Router>\n           <Layout>\n             <Routes>\n               <Route exact path=\"/\" element={<HomePage />} />\n               <Route path=\"/services\" component={ServicesPage} />\n               <Route path=\"/login\" element={<LoginPage />} />\n             </Routes>\n           </Layout>\n         </Router>\n       </ThemeProvider>\n     );\n   }\n   \n   export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}